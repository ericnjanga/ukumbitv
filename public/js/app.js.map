{"version":3,"sources":["anchor-smooth-scroll.js","ng-password.js","main.js","forms-validation.js","morphSearch.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzzeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/**\n **************************[smoothscroll.js]**************************\n **************************[smoothscroll.js]**************************\n * Created by admin on 15.08.2017.\n */\n// Select all links with hashes\n$('a[href*=\"#\"]')\n  // Remove links that don't actually link to anything\n  .not('[href=\"#\"]')\n  .not('[href=\"#0\"]')\n  .not('[data-toggle=\"collapse\"]')\n  .click(function(event) {\n    // On-page links\n    if (\n      location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') \n      && \n      location.hostname == this.hostname\n    ) {\n      // Figure out element to scroll to\n      var target = $(this.hash);\n      target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n      // Does a scroll target exist?\n      if (target.length) {\n        // Only prevent default if animation is actually gonna happen\n        event.preventDefault();\n        $('html, body').animate({\n          scrollTop: target.offset().top\n        }, 1000, function() {\n          // Callback after animation\n          // Must change focus!\n          var $target = $(target);\n          $target.focus();\n          if ($target.is(\":focus\")) { // Checking if the target was focused\n            return false;\n          } else {\n            $target.attr('tabindex','-1'); // Adding tabindex for elements not focusable\n            $target.focus(); // Set focus again\n          };\n        });\n      }\n    }\n  });","/**\n **************************[ng-password.js]**************************\n **************************[ng-password.js]**************************\n * Allow to confirm password (Don't remember where on the web I got it)\n */\n(function() {\n  'use strict';\n\n  function $Password() {\n\n    function link(scope, element, attrs, ctrls) {\n      var formController = ctrls[1];\n      var ngModel = ctrls[0];\n      var otherPasswordModel = formController[attrs.matchPassword];\n\n      var getMatchValue = function() {\n        return otherPasswordModel.$viewValue;\n      };\n\n      scope.$watch(getMatchValue, function() {\n        ngModel.$$parseAndValidate();\n      });\n\n      // if ng1.3+\n      if (ngModel.$validators) {\n        ngModel.$validators.passwordMatch = function(modelValue) {\n          return (!modelValue && !otherPasswordModel.$modelValue) || (modelValue === otherPasswordModel.$modelValue);\n        };\n      } else {\n        ngModel.$parsers.push(function(value) {\n          ngModel.$setValidity('passwordMatch', (!value && !otherPasswordModel.$viewValue) || value === otherPasswordModel.$viewValue);\n          return value;\n        });\n      }\n\n      otherPasswordModel.$parsers.push(function(value) {\n        ngModel.$setValidity('passwordMatch', (!value && !ngModel.$viewValue) || value === ngModel.$viewValue);\n        return value;\n      });\n    }\n\n    var controllers = ['^ngModel', '^form'];\n\n    return {\n      restrict: 'A',\n      require: controllers,\n      link: link\n    }; // end return\n  }\n\n  angular.module('ngPassword', []).directive('matchPassword', $Password);\n\n  angular.module('angular.password', ['ngPassword']);\n  angular.module('angular-password', ['ngPassword']);\n\n  if (typeof module === 'object' && typeof define !== 'function') {\n    module.exports = angular.module('ngPassword');\n  }\n})();\n","/**\n **************************[main.js]**************************\n **************************[main.js]**************************\n * Created by admin on 15.08.2017.\n */\n$.ajaxSetup({\n    headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n});\n\n\n\n\n\n\n//Submit comment on click\n//------------------------\n$('body').on('click', '#btn-submit-comment', function(){\n\t//console.log('***heyeyey');\n\tcomment_submit($(this).data('comment-route'), $(this).data('video-id'));\n});\n\n//submit contact\n$('body').on('click', '#btn-submit-contact', function(){\n    //console.log('***heyeyey');\n    sendContactForm($(this).data('contact-route'));\n});\n\n//update profile\n$('body').on('click', '#btn-update-profile', function(){\n    //console.log('***heyeyey');\n    updateProfile($(this).data('update-profile'));\n});\n\n$('body').on('click', '#btn-update-password', function(){\n    //console.log('***heyeyey');\n    updatePassword($(this).data('update-password'));\n});\n\n\n\n\n//Add/remove like on click\n//------------------------\n$('body').on('click','.btn-like', function(){\n\tif(!$(this).hasClass('btn-on')){\n\t\tmovie_like($(this));\n\t}else{\n\t\tmovie_unlike($(this));\n\t}\n});\n\n//Add/remove like on click\n//------------------------\n$('body').on('click','.btn-dislike', function(){\n\tif(!$(this).hasClass('btn-on')){\n\t\tmovie_dislike($(this));\n\t}else{\n\t\tmovie_undislike($(this));\n\t}\n});\n\n\n\nfunction comment_submit(urlCommentRoute, videoId){\n\n\tif($('#comment-text').val() === '') {\n\t\tvar curr_lang = $('body').data('active-lang');\n\t\tif(curr_lang=='en'){\n    \tswal(\"Hmm\", \"Need to write a review, try again pls\", \"error\");\n    }else{\n    \tswal(\"Hmm\", \"Vous devez écrire un commentaire, Veuillez réessayer\", \"error\");\n    }\n\t} else {\n\n    var token = $('meta[name=\"csrf-token\"]').attr('content');\n    var fd = new FormData;\n\n    fd.append('_token', token);\n    fd.append('video_id', videoId);\n    fd.append('text', $('#comment-text').val());\n\n    $.ajax({\n        type: 'POST',\n        url: urlCommentRoute,\n        contentType: false,\n        processData: false,\n        data: fd,\n        dataType: 'html',\n        success: function(data){\n            var rep = JSON.parse(data);\n            //alert('Comment successful send!');\n           // console.log(rep);\n            if(rep.user.name === ''){\n                userName = rep.user.email;\n            } else {\n                userName = rep.user.name;\n            }\n\n            $('#comment-text').val('');\n            $('#comment-rate-modal').modal('hide')\n            $(\"#new-comment-section\").prepend('<div class=\"comment\"><div class=\"img-block\"><img src=\"'+rep.user.picture+'\" alt=\"\"></div><div class=\"comment-text-block\"><div class=\"comment-name\">'+userName+'</div><p class=\"comment-text\">'+rep.text+' just now</p></div></div>');\n        },\n        error: function (data) {\n            alert('error '+data);\n        }\n    }); \n\t}//end else\n}\n\nfunction movie_like($btn) { \n  var likesCount = $('#likes-count').text();\n  var disLikesCount = $('#dislikes-count').text(); \n  var fd = new FormData;\n\t\t//...\n  fd.append('_token', '{{csrf_token()}}');\n  fd.append('id', $btn.data('video-id'));\n  fd.append('type', 'like');\n\n  //...\n  $.ajax({\n    type: 'POST',\n    url: $btn.data('route-like'),\n    contentType: false,\n    processData: false,\n    data: fd,\n    dataType: 'html',\n    success: function(data){ \n      $('#likes-count, #likes-count-top').text(+likesCount + 1);\n      //...\n      $('.btn-like').removeClass('btn-off').addClass('btn-on');\n      $('.btn-dislike').removeClass('.btn-on').addClass('btn-off');\n\n      var rep = JSON.parse(data);\n      //console.log(rep);\n\n      if(rep.check === 1){\n          $('#dislikes-count').text(+disLikesCount - 1);\n      } \n    },\n    error: function(data){ \n    \tvar curr_lang = $('body').data('active-lang');\n    \tif(curr_lang=='en'){\n    \t\tswal(\"Oh no!\", \"Problem \\\"linking\\\" your movie. Please try again later\", \"error\");\n    \t}else{\n    \t\tswal(\"Oh non!\", \"Difficulté a \\\"aimer\\\" votre video. Veuillez réessayer plus tard\", \"error\");\n    \t}  \n  \t}\n  });\n}//like\n\nfunction movie_unlike($btn) { \n  var likesCount = $('#likes-count').text(); \n  var fd = new FormData;\n\n  fd.append('_token', '{{csrf_token()}}');\n  fd.append('id', $btn.data('video-id'));\n\n  $.ajax({\n    type: 'POST',\n    url: $btn.data('route-unlike'),\n    contentType: false,\n    processData: false,\n    data: fd,\n    dataType: 'html',\n    success: function(data){ \n      $('#likes-count, #likes-count-top').text(+likesCount - 1);\n      //...\n      $('.btn-like').removeClass('btn-on').addClass('btn-off');\n      // $('.btn-dislike').removeClass('.btn-off').addClass('btn-on');\n\n      var rep = JSON.parse(data); \n    },\n    error: function(data){ \n    \tvar curr_lang = $('body').data('active-lang');\n    \tif(curr_lang=='en'){\n    \t\tswal(\"Oh no!\", \"Problem \\\"unlinking\\\" your movie. Please try again later\", \"error\");\n    \t}else{\n    \t\tswal(\"Oh non!\", \"Difficulté a annuler l'action \\\"aimer\\\" sur votre video. Veuillez réessayer plus tard\", \"error\");\n    \t}   \n    }\n  });\n}//unlike\n\nfunction movie_dislike($btn) { \n  var likesCount = $('#likes-count').text();\n  var disLikesCount = $('#dislikes-count').text(); \n  var fd = new FormData;\n\n  fd.append('_token', '{{csrf_token()}}');\n  fd.append('id', $btn.data('video-id'));\n  fd.append('type', 'dislike');\n\n  $.ajax({\n    type: 'POST',\n    url: $btn.data('route-like'),\n    contentType: false,\n    processData: false,\n    data: fd,\n    dataType: 'html',\n    success: function(data){ \n      $('#dislikes-count').text(+disLikesCount + 1);\n      //...\n      $('.btn-dislike').removeClass('btn-off').addClass('btn-on');\n      $('.btn-like').removeClass('btn-on').addClass('btn-off');\n      var rep = JSON.parse(data);\n      if(rep.check === 1){\n          $('#likes-count, #likes-count-top').text(+likesCount - 1);\n      } \n    },\n    error: function(data){ \n    \tvar curr_lang = $('body').data('active-lang');\n    \tif(curr_lang=='en'){\n    \t\tswal(\"Oh no!\", \"Problem \\\"dislinking\\\" your movie. Please try again later\", \"error\");\n    \t}else{\n    \t\tswal(\"Oh non!\", \"Difficulté a \\\"pas aimer\\\" votre video. Veuillez réessayer plus tard\", \"error\");\n    \t}  \n    }\n  });\n}//dislike\n\nfunction movie_undislike($btn) { \n  var disLikesCount = $('#dislikes-count').text(); \n  var fd = new FormData;\n\n  fd.append('_token', '{{csrf_token()}}');\n  fd.append('id', $btn.data('video-id'));\n\n  $.ajax({\n    type: 'POST',\n    url: $btn.data('route-unlike'),\n    contentType: false,\n    processData: false,\n    data: fd,\n    dataType: 'html',\n    success: function(data){ \n      $('#dislikes-count').text(+disLikesCount - 1);\n      $('.btn-dislike').removeClass('btn-on').addClass('btn-off');\n      var rep = JSON.parse(data); \n    },\n    error: function(data){\n\t\t  var curr_lang = $('body').data('active-lang');\n\t\t  if(curr_lang=='en'){\n      \tswal(\"Oh no!\", \"Couldn't \\\"undislike\\\" the movie. Please try again later\", \"error\");\n      }else{\n      \tswal(\"Oh no!\", \"Problème enlever l'action \\\"pas aimer\\\" sur le film. Veuillez réessayer plus tard\", \"error\");\n      }\n    }\n  });\n}//undislike\n\n\n//contact form\nfunction sendContactForm(url) {\n\n    var fd = new FormData;\n\n    fd.append('_token', '{{csrf_token()}}');\n    fd.append('category', $('#q-category').val());\n    fd.append('email', $('#user-email').val());\n    fd.append('message', $('#message-text').val());\n    $('#btn-submit-contact').prop('disabled', true);\n\n\n    $.ajax({\n      type: 'POST',\n      url: url,\n      contentType: false,\n      processData: false,\n      data: fd,\n      dataType: 'html',\n      success: function(data){ \n      // var rep = JSON.parse(data);\n\t    var curr_lang = $('body').data('active-lang');\n\t    if(curr_lang=='en'){\n      \tswal(\"Cool!\", \"Email sent successfully\", \"success\");\n      }else{\n      \tswal(\"Superbe!\", \"L'email a été envoyé avec succès\", \"success\");\n      }\n      $('#btn-submit-contact').prop('disabled', false);\n    },\n    error: function(data){\n\t    var curr_lang = $('body').data('active-lang');\n\t    if(curr_lang=='en'){\n      \tswal(\"Oh no!\", \"Email couldn't be sent. Please try again later\", \"success\");\n      }else{\n      \tswal(\"Oh non\", \"L'email n'a pas pu être envoyé. Veuillez réessayer plus tard\", \"success\");\n      }\n      \n      $('#btn-submit-contact').prop('disabled', false);\n    }\n});\n}\n\n//user profile\nfunction updateProfile(url) {\n\n    var fd = new FormData;\n\n    fd.append('_token', '{{csrf_token()}}');\n    fd.append('name', $('#user-name').val());\n    fd.append('email', $('#user-email').val());\n    fd.append('phone', $('#user-phone').val());\n    $('#btn-update-profile').prop('disabled', true);\n\n\n    $.ajax({\n        type: 'POST',\n        url: url,\n        contentType: false,\n        processData: false,\n        data: fd,\n        dataType: 'html',\n        success: function(data){ \n\t\t    \tvar curr_lang = $('body').data('active-lang');\n\n\t\t    \tif(curr_lang=='en'){\n\t          // var rep = JSON.parse(data);\n\t          swal(\"Cool!\", \"Profile was successfully updated\", \"success\"); \n\t        }else{\n\t          swal(\"Superbe!\", \"Votre profil a été mis à jour avec succès\", \"success\");\n\t        }\n\t        $('#btn-update-profile').prop('disabled', false);\n        },\n        error: function(data){\n\t\t    \tvar curr_lang = $('body').data('active-lang');\n\t\t    \tif(curr_lang=='en'){\n\t\t\t\t\t\tswal(\"Oh no!\", \"Couldn't update your profile. Please try again later\", \"error\");\n\t\t    \t}else{\n\t\t    \t\tswal(\"Oh non!\", \"Difficulté à mettre à jour votre profile. Veuillez réessayer plus tard\", \"error\");\n\n\t\t    \t}\n            \n          $('#btn-update-profile').prop('disabled', false);\n        }\n    });\n}\n\nfunction updatePassword(url) {\n\n    var fd = new FormData;\n\n    fd.append('_token', '{{csrf_token()}}');\n    fd.append('oldpassword', $('#old-password').val());\n    fd.append('newpassword', $('#new-password').val());\n    $('#btn-update-password').prop('disabled', true);\n\n\n    $.ajax({\n        type: 'POST',\n        url: url,\n        contentType: false,\n        processData: false,\n        data: fd,\n        dataType: 'html',\n        success: function(data){ \n          var rep = JSON.parse(data);\n          // console.log(rep.errors);\n           \n\t\t    \tvar curr_lang = $('body').data('active-lang');\n\t\t    \tif(curr_lang=='en'){\n\t\t    \t\tswal(rep.title, rep.message, rep.type);\n\t\t    \t}else{\n\t\t    \t\tswal(\"Superbe!\", \"Votre mot de passe a été mis à jour\", \"error\");\n\t\t    \t}   \n          $('#btn-update-password').prop('disabled', false);\n        },\n        error: function(data){ \n\t\t    \tvar curr_lang = $('body').data('active-lang');\n\t\t    \tif(curr_lang=='en'){\n\t\t    \t\tswal(\"Oh no!\", \"Couldn't update your password. Please try again later\", \"error\");\n\t\t    \t}else{\n\t\t    \t\tswal(\"Oh non!\", \"Difficulté à mettre à jour votre mot de passe. Veuillez réessayer plus tard\", \"error\");\n\t\t    \t}  \n          $('#btn-update-password').prop('disabled', false);\n        }\n    });\n}\n\n\n\n\n\n/**\n *\n * SEARCH AUTOCOMPLETE\n * --------------------\n*/\nvar substringMatcher = function(strs) {\n  return function findMatches(q, cb) {\n    var matches, substringRegex;\n\n    // an array that will be populated with substring matches\n    matches = [];\n\n    // regex used to determine if a string contains the substring `q`\n    substrRegex = new RegExp(q, 'i');\n\n    // iterate through the pool of strings and for any string that\n    // contains the substring `q`, add it to the `matches` array\n    $.each(strs, function(i, str) {\n      if (substrRegex.test(str)) {\n        matches.push(str);\n      }\n    });\n\n    cb(matches);\n  };\n};\n\n\nvar states = new Bloodhound({\n    datumTokenizer: Bloodhound.tokenizers.whitespace,\n    queryTokenizer: Bloodhound.tokenizers.whitespace,\n    prefetch: '/search-data'\n});\n//states.initialize();\n\n$('#frame-search .typeahead').typeahead({\n  hint: true,\n  highlight: true,\n  minLength: 1\n},\n{\n  name: 'states',\n  // source: substringMatcher(states)\n    source: states\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n// /**\n//  *\n//  * INITIALIZE INTRO BACKGROUND VIDEO\n//  * ---------------------------------\n// */\n// $('#intro-video').YTPlayer({\n//   fitToBackground: true,\n//   videoId: 'oJxzaBDUEB8'//youtube video ID\n// });\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n *\n * UPDATING PACKAGE\n * ---------------------------------\n*/\n$('body').on('click', '#link-update-package', function(){\n\tdocument.location.href = $(this).data('route');\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ","/**\n **************************[forms-validation.js]**************************\n **************************[forms-validation.js]************************** \n */\n \n// validationApp \nvar validationApp = angular.module('validationApp', ['ngPassword']);\n\n// mainController\nvalidationApp.controller('mainController', ['$scope', function($scope) {\n\t// function to submit the form after all validation has occurred\t\t\t\n\t$scope.submitForm = function() {\n\t\t// check to make sure the form is completely valid\n\t\t// if ($scope.userForm.$valid) {\n\t\t// \talert('our form is amazing');\n\t\t// }\n\t};\n}]);\n\n","(function() {\n\tvar morphSearch = document.getElementById( 'morphsearch' );\n\n\t\tif (morphSearch!==null){\n\t\t\tvar input = morphSearch.querySelector( 'input.morphsearch-input' ),\n\t\t\tctrlClose = morphSearch.querySelector( 'span.morphsearch-close' ),\n\t\t\tisOpen = isAnimating = false,\n\t\t\t// show/hide search area\n\t\t\ttoggleSearch = function(evt) {\n\t\t\t\t// return if open and the input gets focused\n\t\t\t\tif( evt.type.toLowerCase() === 'focus' && isOpen ) return false;\n\n\t\t\t\tvar offsets = morphsearch.getBoundingClientRect();\n\t\t\t\tif( isOpen ) {\n\t\t\t\t\tclassie.remove( morphSearch, 'open' );\n\n\t\t\t\t\t// trick to hide input text once the search overlay closes \n\t\t\t\t\t// todo: hardcoded times, should be done after transition ends\n\t\t\t\t\tif( input.value !== '' ) {\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tclassie.add( morphSearch, 'hideInput' );\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\tclassie.remove( morphSearch, 'hideInput' );\n\t\t\t\t\t\t\t\tinput.value = '';\n\t\t\t\t\t\t\t}, 300 );\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tinput.blur();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tclassie.add( morphSearch, 'open' );\n\t\t\t\t}\n\t\t\t\tisOpen = !isOpen;\n\t\t\t};\n\n\n\n\t\t\t// events\n\t\t\tinput.addEventListener( 'focus', toggleSearch );\n\t\t\tctrlClose.addEventListener( 'click', toggleSearch );\n\t\t\t// esc key closes search overlay\n\t\t\t// keyboard navigation events\n\t\t\tdocument.addEventListener( 'keydown', function( ev ) {\n\t\t\t\tvar keyCode = ev.keyCode || ev.which;\n\t\t\t\tif( keyCode === 27 && isOpen ) {\n\t\t\t\t\ttoggleSearch(ev);\n\t\t\t\t}\n\t\t\t} );\n\n\n\n\t\t\n\n\n\n\n\t\t\t/***** for demo purposes only: don't allow to submit the form *****/\n\t\t\tmorphSearch.querySelector( 'button[type=\"submit\"]' ).addEventListener( 'click', function(ev) { ev.preventDefault(); } );\n\n\n\n\n\t\t}\n\t\t//only if \"morphsearch\" is available\n\n\n\n\t\t\n})();"]}